substitutions:
  _IMG_KEEP: "3"

steps:
# Build the container image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/dcube-258607/one2onetool', '.']

# Push the image to Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/dcube-258607/one2onetool']

# Deploy an image from Container Registry to Cloud Run
- name: 'gcr.io/cloud-builders/gcloud'
  args: ['beta', 'run', 'deploy', 'one2onetools', '--image', 'gcr.io/$PROJECT_ID/one2onetool', '--region', asia-northeast1, '--platform', 'managed', '--allow-unauthenticated']

# Remove the image from Docker Image Container
- name: 'gcr.io/cloud-builders/docker'
  args: ['rmi', 'gcr.io/dcube-258607/one2onetool:latest']

- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args: 
    - '-c'
    - |
      set -e
        
      apt update && apt install -y jq
        
      images="one2onetool"
      for image in ${images[@]}; do
        echo "Cleaning image ${image}"
        c=0
        image="gcr.io/dcube-258607/${image}"
        number_keep_images=${_IMG_KEEP}
        date=$(gcloud container images list-tags $image --limit=unlimited \
          --sort-by=~TIMESTAMP --format=json | TZ=/usr/share/zoneinfo/UTC jq -r '.['$number_keep_images'].timestamp.datetime | sub("(?<before>.*):"; .before ) | strptime("%Y-%m-%d %H:%M:%S%z") | mktime | strftime("%Y-%m-%d")')
        for digest in $(gcloud container images list-tags $image --limit=unlimited --sort-by=~TIMESTAMP \
          --filter="timestamp.datetime < '${date}'" --format='get(digest)'); do
          (
            set -x
            gcloud container images delete -q --force-delete-tags "${image}@${digest}"
          )
          c=c+1
        done
        echo "Deleted ${c} images for ${image}." >&2
      fi